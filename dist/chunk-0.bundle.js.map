{"version":3,"sources":["webpack:///./src/common/CallList.js","webpack:///./src/common/Data.js","webpack:///./src/common/ObjectEvents.js","webpack:///./src/common/abortable.js","webpack:///./src/components/Paginator.js","webpack:///./src/tests/pages/paginator-test.js","webpack:///./src/utility.js"],"names":["CallList","stack","args","fn","push","i","indexOf","splice","args2","l","length","BREAK","DataInterface","endpoint","method","timeout","disabled","filters","data","columns","status","index","rows","key","defaultValue","undefined","name","hasOwnProperty","value","setFilter","refresh","changed","getFilter","_queueId","window","requestAnimationFrame","abort","trigger","Promise","resolve","reject","_abort","$","ajax","url","cache","type","dataType","JSON","stringify","getFilters","complete","wrap","response","success","handleResponse","Symbol","iterator","datum","ObjectEvents","PagedDataInterface","pageLength","Object","assign","page","pageCount","Math","max","ceil","count","DummyPagedData","latency","constructData","_count","id","title","timer","setTimeout","start","end","min","clearTimeout","events","event","TypeError","abortable","onAbort","aborted","isAborted","apply","arguments","PREFIX","EVENTS","PAGINATOR_TEMPLATE","Paginator","service","$element","$pageCount","find","$input","$btnFirst","$btnNext","$btnBack","$btnLast","_animationId","_render","render","_onClick","isDisabled","$btn","target","closest","cmd","attr","hasClass","_onSubmit","parseInt","val","Number","isNaN","_disable","_enabled","on","console","log","selector","appendTo","text","addClass","removeClass","prop","PaginatorTest","context","paginator","clamp","firstValue","parseInteger","parseBoolean","parseBooleanString","parseBooleanOrNumber","setDefaultValues","nill","minValue","maxValue","item","radix","defaults"],"mappings":"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","file":"chunk-0.bundle.js","sourcesContent":["export default class CallList {\r\n    constructor(...args) {\r\n        this.stack = [];\r\n        this.args = args;\r\n    }\r\n\r\n    add(fn) {\r\n        this.stack.push(fn);\r\n    }\r\n\r\n    remove(fn) {\r\n        const i = this.stack.indexOf(fn);\r\n\r\n        if(i !== -1) {\r\n            this.stack.splice(i, 1);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    fire(...args) {\r\n        let args2 = [...this.args, ...args];\r\n\r\n        for(let i = 0, l = this.stack.length; i < l; i++) {\r\n            if(this.stack[i](...args2) === CallList.BREAK) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// An object that can be returned to force CallList to break.\r\nCallList.BREAK = {};\r\n","import ObjectEvents from './ObjectEvents';\r\nimport {clamp} from \"../utility\";\r\nimport abortable from \"./abortable\";\r\n\r\n\r\n/**\r\n * Interface for loading data via ajax from an endpoint.\r\n *\r\n * Events\r\n * data-changed\r\n * loading-start\r\n * loading-complete\r\n * loading-abort\r\n */\r\nexport class DataInterface extends ObjectEvents {\r\n    constructor(endpoint, method=\"POST\", timeout=5000) {\r\n        super();\r\n        this.disabled = true;\r\n        this.filters = {};\r\n\r\n        /**\r\n         * Holds the raw data from the server. Should at least contain columns, and data properties.\r\n         * @type {{columns: Array, data: Array}}\r\n         */\r\n        this.data = {\r\n            columns:[],\r\n            data:[]\r\n        };\r\n\r\n        /**\r\n         * The url to send requests to.\r\n         */\r\n        this.endpoint = endpoint;\r\n\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * The current status of the data.  Can be either unloaded, loading, loaded\r\n         * @type {string}\r\n         */\r\n        this.status = 'unloaded';\r\n\r\n        /**\r\n         * The http method used to request the data.  Defaults to POST.\r\n         * Usually either GET or POST.\r\n         * @default 'POST'\r\n         * @type {string}\r\n         */\r\n        this.method = method;\r\n\r\n        /**\r\n         * The amount of time in milliseconds that the request has before it times out.\r\n         * @default 5000\r\n         * @type {number}\r\n         */\r\n        this.timeout = timeout;\r\n        this.disabled = false;\r\n    }\r\n\r\n    // noinspection JSUnusedGlobalSymbols\r\n    /**\r\n     * Retrieves the row at the given index.\r\n     * @param index {Number}\r\n     * @returns {{}}\r\n     */\r\n    getRow(index) {\r\n        return this.rows[index];\r\n    }\r\n\r\n    // noinspection JSUnusedGlobalSymbols\r\n    /**\r\n     * Retrieves the given data key.  Returns the defaultValue if the key does not exist or if the value is undefined.\r\n     * @param key {String} - The key to retrieve.\r\n     * @param defaultValue {*} - The default value to return if the key is not found.\r\n     * @returns {*}\r\n     */\r\n    getData(key, defaultValue=undefined) {\r\n        if(this.data && this.data[key] !== undefined) {\r\n            return this.data[key];\r\n        } else {\r\n            return defaultValue;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieve the value of the filter with the provided name.\r\n     * @param name {String}\r\n     * @returns {*}\r\n     */\r\n    getFilter(name) {\r\n        return this.filters[name];\r\n    }\r\n\r\n    // noinspection JSUnusedGlobalSymbols\r\n    /**\r\n     * Applys a dictionary of name -> filter items.\r\n     * @param filters {{}}\r\n     */\r\n    applyFilters(filters) {\r\n        for(let key in filters) {\r\n            if(filters.hasOwnProperty(key)) {\r\n                let value = filters[key];\r\n                this.setFilter(key, value);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clears all filters.\r\n     */\r\n    clearFilters() {\r\n        this.filters = {};\r\n        this.refresh();\r\n    }\r\n\r\n    /**\r\n     * Sets the filter with the given name.  Returns true if the filter was changed.\r\n     * @param name {String} The name of the filter.\r\n     * @param value {*} The value to set it to.\r\n     * @returns {boolean} - True if changed.\r\n     */\r\n    setFilter(name, value) {\r\n        let changed = this.getFilter(name) !== value;\r\n        this.filters[name] = value;\r\n\r\n        if(changed) {\r\n            this.refresh();\r\n        }\r\n\r\n        return changed;\r\n    }\r\n\r\n    /**\r\n     * Returns a object of all filters that need to be passed with requests to the server.\r\n     * @returns {{}}\r\n     */\r\n    getFilters() {\r\n        return this.filters;\r\n    }\r\n\r\n    /**\r\n     * Makes a request to the server to refresh the data.\r\n     */\r\n    refresh() {\r\n        // A request is already queued to be sent at the next animation frame.\r\n        // Requests are only sent on animation frames so that that any concurrent\r\n        // statements can update filters, pages, etc and they can be sent in the\r\n        // same request.\r\n        if(this._queueId || this.disabled) {\r\n            return; // Request already sent or a request is pending.\r\n        }\r\n\r\n        this._queueId = window.requestAnimationFrame(() => {\r\n            this._queueId = null;\r\n            this.abort(); // Abort any open request.\r\n            // noinspection JSUnusedGlobalSymbols\r\n            this.status = 'loading';\r\n            this.trigger(\"loading-start\", this);\r\n\r\n            /**\r\n             * Return a promise object.\r\n             */\r\n            return new Promise((resolve, reject) => {\r\n                // Create an abortable.  An abortable is simple a function that you can use to decorate\r\n                // other function so that they won't do anything if the abortable function is called.\r\n                const abort = abortable(() => reject());\r\n\r\n                this._abort = abort;\r\n\r\n                $.ajax({\r\n                    url: this.endpoint,\r\n                    cache: false,\r\n                    type: this.method,\r\n                    timeout: this.timeout,\r\n\r\n                    dataType: 'json',\r\n                    data: JSON.stringify(this.getFilters()),\r\n\r\n                    complete: this._abort.wrap((response) => {\r\n                        // noinspection JSUnusedGlobalSymbols\r\n                        this.status = \"loaded\";\r\n\r\n                        if(this._abort === abort) {\r\n                            this._abort = null;\r\n                        }\r\n\r\n                        this.trigger('loading-complete', this, response);\r\n                    }),\r\n\r\n                    success: this._abort.wrap((response) => {\r\n                        this.handleResponse(response);\r\n                        resolve(response);\r\n                    })\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handles the response from the server by updating the data and triggering a data-changed event.\r\n     * @param response\r\n     */\r\n    handleResponse(response) {\r\n        this.data = response;\r\n        this.trigger('data-changed', this, response);\r\n    }\r\n\r\n    /**\r\n     * Will abort the current request if exists.\r\n     * @returns {boolean}\r\n     */\r\n    abort() {\r\n        if(this._abort) {\r\n            this._abort();\r\n            this._abort = null;\r\n            this.trigger('loading-abort', this);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // noinspection JSUnusedGlobalSymbols\r\n    /**\r\n     * The number of rows available.\r\n     * @returns {Number}\r\n     */\r\n    get length() {\r\n        return this.rows.length;\r\n    }\r\n\r\n    /**\r\n     * Returns an array of all rows.\r\n     * @returns {Array}\r\n     */\r\n    get rows() {\r\n        if(this.data && this.data.data) {\r\n            return this.data.data;\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    // noinspection JSUnusedGlobalSymbols\r\n    /**\r\n     * Returns an array of all columns.\r\n     * @returns {Array}\r\n     */\r\n    get columns() {\r\n        if(this.data && this.data.columns) {\r\n            return this.data.columns;\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Iterates over every row.\r\n     * @returns {IterableIterator<{}>}\r\n     */\r\n    *[Symbol.iterator]() {\r\n        for (let datum of this.rows) {\r\n            yield datum;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * A data interface class that adds the interface for pages.\r\n */\r\nexport class PagedDataInterface extends DataInterface {\r\n    constructor(endpoint, method=\"POST\", timeout=5000, pageLength=100) {\r\n        super(endpoint, method, timeout);\r\n        // noinspection JSUnusedGlobalSymbols\r\n        this.disabled = true;\r\n        this.pageLength = pageLength;\r\n        // noinspection JSUnusedGlobalSymbols\r\n        this.disabled = false;\r\n    }\r\n\r\n    getFilters() {\r\n        const filters = {};\r\n        Object.assign(filters, super.getFilters());\r\n        filters.page = this.page;\r\n        filters.pageLength = this.pageLength;\r\n        return filters;\r\n    }\r\n\r\n    clearFilters() {\r\n        super.clearFilters();\r\n        this.page = 1;\r\n    }\r\n\r\n    handleResponse(response) {\r\n        this.data = response;\r\n        this.trigger('data-changed', this);\r\n    }\r\n\r\n    get page() {\r\n        return this.data.page || 1;\r\n    }\r\n\r\n    set page(value) {\r\n        value = clamp(value, 1, this.pageCount);\r\n\r\n        if(value !== this.page) {\r\n            this.setFilter('page', value);\r\n        }\r\n    }\r\n\r\n    get pageLength() {\r\n        return this.data.pageLength || 0;\r\n    }\r\n\r\n    set pageLength(value) {\r\n        value = Math.max(0, value || 0);\r\n\r\n        if(value !== this.pageLength) {\r\n            this.setFilter('pageLength', value);\r\n        }\r\n    }\r\n\r\n    get pageCount() {\r\n        return Math.ceil(this.count / this.pageLength);\r\n    }\r\n\r\n    get count() {\r\n        return this.data.count;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Dummy paged data interface class that returns auto generated data rows without requesting information from a server.\r\n * Simulates latency by using setTimeout.\r\n * Useful for testing.\r\n */\r\nexport class DummyPagedData extends PagedDataInterface {\r\n    /**\r\n     *\r\n     * @param pageLength - Size of the page requests.\r\n     * @param count - Total number of items across all pages.\r\n     * @param latency - Simulated lag between making the request and the response.\r\n     * @param constructData\r\n     */\r\n    constructor(pageLength, count, latency=100, constructData=null) {\r\n        super('', 'POST', 5000, pageLength);\r\n        this.latency = latency;\r\n        this._count = count;\r\n\r\n        if(constructData !== null) {\r\n            this.constructData = constructData;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Used to construct every data row.\r\n     * @param page\r\n     * @param index\r\n     * @returns {{id: *, title: string}}\r\n     */\r\n    constructData(page, index) {\r\n        return {\r\n            id: index,\r\n            title: `Item on page ${page}`\r\n        }\r\n    }\r\n\r\n    refresh() {\r\n        if(this._queueId || this.disabled) {\r\n            return this._queueId;\r\n        }\r\n\r\n        this._queueId = window.requestAnimationFrame(() => {\r\n            this._queueId = null;\r\n            // noinspection JSUnusedGlobalSymbols\r\n            this.status = 'loading';\r\n            this.trigger(\"loading-start\", this);\r\n            this.abort();\r\n\r\n            return new Promise((resolve, reject) => {\r\n                let timer = setTimeout(() => {\r\n                    const data = [];\r\n\r\n                    let page = this.getFilter('page'),\r\n                        pageLength = this.getFilter('pageLength'),\r\n                        start = page * pageLength,\r\n                        end = Math.min(this._count, start + pageLength);\r\n\r\n                    for(; start < end; start++) {\r\n                        data.push(this.constructData(page, start));\r\n                    }\r\n\r\n                    const response = {\r\n                        page: page,\r\n                        pageLength: pageLength,\r\n                        count: this._count,\r\n                        data: data\r\n                    };\r\n\r\n                    this.trigger('loading-complete', this, response);\r\n                    this.handleResponse(response);\r\n                    this._abort = null;\r\n                    resolve(response);\r\n                }, this.latency);\r\n\r\n                // noinspection JSUnusedGlobalSymbols\r\n                this._abort = () => {\r\n                    clearTimeout(timer);\r\n                    this._abort = null;\r\n                    reject();\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n","/**\r\n * @method trigger\r\n * @mixin\r\n */\r\nexport default class ObjectEvents {\r\n    constructor() {\r\n        this.events = {};\r\n    }\r\n\r\n\r\n    on(event, fn) {\r\n        if(!this.events[event]) {\r\n            this.events[event] = [];\r\n        }\r\n\r\n        if(typeof fn !== 'function') {\r\n            throw new TypeError('Callback was not a function.')\r\n        }\r\n\r\n        if(this.events[event].indexOf(fn) === -1) {\r\n            this.events[event].push(fn);\r\n        }\r\n    }\r\n\r\n    indexOf(event, fn) {\r\n        if(this.events && this.events[event]) {\r\n            return this.events[event].indexOf(fn);\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    off(event, fn) {\r\n        let i = this.indexOf(event, fn);\r\n\r\n        if(i !== -1) {\r\n            return this.events[event].splice(i, 1)[0];\r\n        }\r\n    }\r\n\r\n    trigger(event, ...args) {\r\n        if(this.events && this.events[event]) {\r\n            for(let fn of this.events[event]) {\r\n                if(fn(...args) === ObjectEvents.BREAK) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nObjectEvents.BREAK = {};\r\n","/**\r\n * Decorates a function so that it can be aborted.  Useful for ajax requests.\r\n * @returns {abort}\r\n */\r\nimport CallList from \"./CallList\";\r\n\r\nexport default function abortable(onAbort) {\r\n    let aborted = false;\r\n\r\n    function abort() {\r\n        aborted = true;\r\n\r\n        if(onAbort) {\r\n            onAbort();\r\n        }\r\n    }\r\n\r\n    abort.isAborted = function() {\r\n        return aborted;\r\n    };\r\n\r\n    abort.wrap = function(fn) {\r\n        return function() {\r\n            if(!aborted) {\r\n                return fn.apply(this, arguments);\r\n            }\r\n        }\r\n    };\r\n\r\n    return abort;\r\n}\r\n","import $ from 'jquery';\r\n\r\n\r\nconst PREFIX = 'paginator';\r\n\r\n\r\nconst EVENTS = {\r\n    'pageChange': `${PREFIX}.pageChanged`\r\n};\r\n\r\n\r\nconst PAGINATOR_TEMPLATE = `\r\n<form method=\"post\" class=\"paginator\" action=\"javascript:void(0);\">\r\n    <div class=\"pane-left\">\r\n        <span class=\"page-btn btn-page-back\" data-go=\"previous\"><i class=\"fas fa-step-backward\"></i></span>\r\n        <span class=\"page-btn btn-page-first\" data-go=\"first\"><i class=\"fas fa-fast-backward\"></i></span>\r\n    </div>\r\n    <div class=\"pages\">\r\n        <div>Page </div>\r\n        <input type=\"number\" value=\"\" title=\"Page\" name=\"page\" />\r\n        <div>of <span class=\"pageCount\"></span></div></div>\r\n    <div class=\"pane-right\">\r\n        <span class=\"page-btn btn-page-last\" data-go=\"last\"><i class=\"fas fa-fast-forward\"></i></span>\r\n        <span class=\"page-btn btn-page-next\" data-go=\"next\"><i class=\"fas fa-step-forward\"></i></span>\r\n    </div>\r\n</form>\r\n`;\r\n\r\n\r\nexport default class Paginator {\r\n    static EVENTS = EVENTS;\r\n\r\n    constructor(service) {\r\n        this.service = service;\r\n\r\n        this.$element = $(PAGINATOR_TEMPLATE);\r\n        this.$pageCount = this.$element.find('.pageCount');\r\n        this.$input = this.$element.find(\"input\");\r\n        this.$btnFirst = this.$element.find('.btn-page-first');\r\n        this.$btnNext = this.$element.find('.btn-page-next');\r\n        this.$btnBack = this.$element.find('.btn-page-back');\r\n        this.$btnLast = this.$element.find('.btn-page-last');\r\n        this._animationId = null;\r\n\r\n        this._render = () => this.render();\r\n\r\n        this._onClick = (event) => {\r\n            if(this.isDisabled) return;\r\n\r\n            let $btn = $(event.target).closest('[data-go]', this.$element),\r\n                cmd = $btn.attr(\"data-go\");\r\n\r\n            if($btn.hasClass('disabled')) return;\r\n\r\n            if(cmd === 'first') {\r\n                this.service.page = 1;\r\n                this.render();\r\n            } else if(cmd === 'next') {\r\n                this.service.page += 1;\r\n                this.render();\r\n            } else if(cmd === 'previous') {\r\n                this.service.page -= 1;\r\n                this.render();\r\n            } else if(cmd === 'last') {\r\n                this.service.page = this.service.pageCount;\r\n                this.render();\r\n            }\r\n        };\r\n\r\n        this._onSubmit = () => {\r\n            if(this.isDisabled) return;\r\n\r\n            let value = parseInt(this.$input.val(), 10);\r\n\r\n            if(Number.isNaN(value)) {\r\n                this.render();\r\n            } else if(value !== this.service.page) {\r\n                this.service.page = value;\r\n            }\r\n        };\r\n\r\n        this._disable = () => {\r\n            this.isDisabled = true;\r\n        };\r\n\r\n        this._enabled = () => {\r\n            this.isDisabled = false;\r\n        };\r\n\r\n        this.$element.on('click', this._onClick);\r\n        this.$element.on('submit', this._onSubmit);\r\n        this.$input.on('blur', this._onSubmit);\r\n\r\n        this.service.on('loading-start', () => {\r\n            console.log('loading-start');\r\n        });\r\n\r\n        this.service.on('loading-abort', () => {\r\n            console.log(\"loading-abort\");\r\n        });\r\n\r\n        this.service.on('data-changed', this._render);\r\n        this.service.on('loading-start', this._disable);\r\n        this.service.on('loading-complete', this._enabled);\r\n        this.service.on('loading-abort', this._enabled);\r\n\r\n        this.render();\r\n    }\r\n\r\n    appendTo(selector) {\r\n        return this.$element.appendTo(selector);\r\n    }\r\n\r\n    render() {\r\n        if(this._animationId) {\r\n            return;\r\n        }\r\n\r\n        this._animationId = window.requestAnimationFrame(() => {\r\n            this._animationId = null;\r\n            this.$pageCount.text(this.service.pageCount || '?');\r\n            this.$input.val(this.service.page || 1);\r\n\r\n            if(this.service.page <= 1) {\r\n                this.$btnBack.addClass('disabled');\r\n                this.$btnFirst.addClass('disabled');\r\n            } else {\r\n                this.$btnBack.removeClass('disabled');\r\n                this.$btnFirst.removeClass('disabled');\r\n            }\r\n\r\n            if(this.service.page >= this.service.pageCount) {\r\n                this.$btnNext.addClass('disabled');\r\n                this.$btnLast.addClass('disabled');\r\n            } else {\r\n                this.$btnNext.removeClass('disabled');\r\n                this.$btnLast.removeClass('disabled');\r\n            }\r\n        });\r\n    }\r\n\r\n    get isDisabled() {\r\n        return this.$element.hasClass('disabled');\r\n    }\r\n\r\n    set isDisabled(value) {\r\n        value = !!value;\r\n\r\n        if(value === true) {\r\n            this.$element.addClass('disabled');\r\n            this.$input.prop('disabled', true);\r\n        } else {\r\n            this.$element.removeClass('disabled');\r\n            this.$input.prop('disabled', false);\r\n        }\r\n    }\r\n}","import Paginator from '../../components/Paginator';\r\nimport {DummyPagedData} from '../../common/Data';\r\n\r\n\r\nexport default class PaginatorTest {\r\n    constructor(context) {\r\n        this.service = new DummyPagedData(500, 2222, 1000);\r\n        this.paginator = new Paginator(this.service);\r\n    }\r\n\r\n    load() {\r\n        this.paginator.appendTo('#paginator-container');\r\n        this.service.refresh();\r\n    }\r\n}","const nill = {};\r\n\r\n\r\nexport function clamp(value, minValue=null, maxValue=null) {\r\n    if(minValue !== null) {\r\n        value = Math.max(value, minValue);\r\n    }\r\n\r\n    if(maxValue !== null) {\r\n        value = Math.min(value, maxValue);\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\n\r\nexport function firstValue(args) {\r\n    for(let item of args) {\r\n        if(item !== null && item !== undefined) {\r\n            return item;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function parseInteger(value, defaultValue=null, radix=10) {\r\n    value = parseInt(value, radix);\r\n\r\n    if(Number.isNaN(value)) {\r\n        return defaultValue;\r\n    } else {\r\n        return value;\r\n    }\r\n}\r\n\r\n\r\nexport function parseBoolean(value, defaultValue=null) {\r\n    if(typeof value === 'string') {\r\n        if(value === 'true') {\r\n            return true;\r\n        } else if(value === 'false') {\r\n            return false;\r\n        } else {\r\n            return defaultValue;\r\n        }\r\n    } else {\r\n        return !!value;\r\n    }\r\n}\r\n\r\n\r\nexport function parseBooleanString(value) {\r\n    if(value === 'true') {\r\n        return true;\r\n    } else if(value === 'false') {\r\n        return false;\r\n    } else {\r\n        return value;\r\n    }\r\n}\r\n\r\n\r\nexport function parseBooleanOrNumber(value, defaultValue=null, radix=10) {\r\n    if(value === 'true' || value === 'false') {\r\n        return value === 'true';\r\n    } else if(typeof value === 'boolean') {\r\n        return value;\r\n    } else {\r\n        return parseInteger(value, defaultValue, radix);\r\n    }\r\n}\r\n\r\n\r\nexport function setDefaultValues(target, defaults) {\r\n    for(let key in defaults) {\r\n        if(defaults.hasOwnProperty(key) && (!target.hasOwnProperty(key) || target[key] === undefined)) {\r\n            target[key] = defaults[key];\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":""}